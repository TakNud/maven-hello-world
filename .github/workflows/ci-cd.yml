name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Java & Maven
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      - name: Compile Code
        run: mvn -f myapp/pom.xml clean compile

      - name: Run Tests
        run: |
          mvn -f myapp/pom.xml test && echo "✅ Tests succeeded!" || (echo "❌ Tests failed!" && exit 1)

      - name: Increase Patch Version
        run: |
          CURRENT_VERSION=$(mvn -f myapp/pom.xml help:evaluate -Dexpression=project.version -q -DforceStdout)
          NEW_VERSION=$(echo $CURRENT_VERSION | awk -F. -v OFS=. '{$NF++;print}')
          mvn -f myapp/pom.xml versions:set -DnewVersion=$NEW_VERSION
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
          
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add myapp/pom.xml
          git commit -m "Bump version to $NEW_VERSION"
          git push origin master

      - name: Package Application
        run: mvn -f myapp/pom.xml package -DskipTests

      - name: Archive Artifact
        uses: actions/upload-artifact@v4
        with:
          name: myapp-${{ env.NEW_VERSION }}
          path: myapp/target/*.jar

      - name: Build Docker Image
        run: |
          docker build --build-arg JAR_FILE=myapp/target/*.jar -t myapp:${{ env.NEW_VERSION }} .
          docker tag myapp:${{ env.NEW_VERSION }} ${{ secrets.DOCKER_USERNAME }}/myapp:${{ env.NEW_VERSION }}

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push Docker Image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/myapp:${{ env.NEW_VERSION }}
